@page
@using Microsoft.AspNetCore.Identity
@using Sticky.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject ApplicationDbContext _context

@{
    var id = UserManager.GetUserId(User);
    var ubs = _context.UserBoards.Where(b => b.Id.Equals(id));
}

@if (!SignInManager.IsSignedIn(User))
{
    <meta http-equiv="Refresh" content="0; url=/Index" />
}

<header>
    <h1 class="font-effect-3d header2"><a href="/Index">Sticky Notes</a></h1>
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
        <button type="submit" class="btn btn-link navbar-btn navbar-link" id="login">Log Out!</button>
    </form>
</header>

<section>
    <div id="welcome">Welcome, @UserManager.GetUserName(User)!</div>
    <div id="boardsListHead">Boards you're in:</div>
</section>

<section id="boardsList">
    <!-- <div class="boardName">Your Boards!</div> -->
    <!-- The boards are added as an unordered list -->
    <ul>
     @foreach (var board in ubs)
        {
         var b = await _context.Boards.FindAsync(board.BoardId);
         <li class="boardName" onclick="goToBoard(@board.BoardId)">@(b.Name == null ? board.BoardId.ToString() : b.Name) </li>
        }
    </ul>
    <img class="boardImage" src="images/screenshot.png">
</section>